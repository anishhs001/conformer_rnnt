# -*- coding: utf-8 -*-
"""input_conversion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13aY9mGlYfGeRV8-Ptqd14qmmX1Ub9LcY
"""

!pip install librosa
!pip install python_auditory_toolbox
!pip install brian2hears

import librosa
import librosa.display
import matplotlib.pyplot as plt
import numpy as np
import brian2hears

class input_conversion:
  def __init__(self, x, num_filters = 40, low_freq = 50, high_freq = 20000, convert_type = 'spectrogram'):
        self.x = x
        self.num_filters = num_filters
        self.low_freq = low_freq
        self.high_freq = high_freq
        self.convert_type = convert_type

        y, sr = librosa.load(self.x)
        if convert_type == 'spectrogram':
          D = librosa.stft(y)
          spectrogram_output = librosa.amplitude_to_db(np.abs(D), ref=np.max)
          return spectrogram_output

        elif convert_type == 'mel_spectrogram':
          melspectrogram_output = librosa.feature.melspectrogram(y=y, sr=sr)
          # Optionally, convert to decibel scale for better visualization
          melspectrogram_db = librosa.amplitude_to_db(melspectrogram_output, ref=np.max)
          return melspectrogram_db
        elif convert_type == 'cochleogram':
          sound = Sound(y, samplerate=sr*Hz)
          cf = erbspace(low_freq*Hz, high_freq*Hz, num_filters)
          gammatone = Gammatone(sound, cf)
          cochlea = FunctionFilterbank(gammatone, lambda x: clip(x, 0, np.inf)**(1.0/3.0))
          lowpass = LowPass(cochlea, 10*Hz)
          cochleogram_output = lowpass.process().T
          return cochleogram_output